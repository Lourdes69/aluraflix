{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\alura\\\\src\\\\componentes\\\\Movie\\\\MovieGrid.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport styles from \"../Movie/MovieGrid.module.css\";\nimport { useEffect, useState } from \"react\";\nimport get from \"../../Api/Cliente\";\nimport Spinner from \"../Spinner/spinner\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useQuery() {\n  _s();\n  const {\n    search\n  } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n_s(useQuery, \"I+9F+Vhfmc3otMLqUKFlYflxhf8=\", false, function () {\n  return [useLocation];\n});\nfunction MovieGrid() {\n  _s2();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const query = useQuery();\n  const search = query.get(\"search\");\n  console.log(search);\n  useEffect(() => {\n    setIsLoading(true);\n    get(\"/discover/movie\").then(data => {\n      setMovies(data.results);\n      setIsLoading(false);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.moviesGrid,\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n      movie: movie\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n}\n_s2(MovieGrid, \"dq3NNRXqxJi6UHY0CR8JvPuWxdI=\", false, function () {\n  return [useQuery];\n});\n_c = MovieGrid;\nexport default MovieGrid;\nvar _c;\n$RefreshReg$(_c, \"MovieGrid\");","map":{"version":3,"names":["React","MovieCard","styles","useEffect","useState","get","Spinner","useLocation","jsxDEV","_jsxDEV","useQuery","_s","search","useMemo","URLSearchParams","MovieGrid","_s2","movies","setMovies","isLoading","setIsLoading","query","console","log","then","data","results","fileName","_jsxFileName","lineNumber","columnNumber","className","moviesGrid","children","map","movie","id","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/alura/src/componentes/Movie/MovieGrid.js"],"sourcesContent":["import React from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport styles from \"../Movie/MovieGrid.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport get from \"../../Api/Cliente\";\r\nimport Spinner from \"../Spinner/spinner\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction useQuery() {\r\n    const { search } = useLocation();\r\n  \r\n    return React.useMemo(() => new URLSearchParams(search), [search]);\r\n  }\r\n\r\n\r\n\r\nfunction MovieGrid() {\r\nconst [movies, setMovies] = useState([]);\r\nconst [isLoading, setIsLoading] = useState(true);\r\n\r\nconst query = useQuery();\r\nconst search  = query.get(\"search\");\r\nconsole.log(search);\r\n\r\nuseEffect(() => {\r\n    setIsLoading(true);\r\n    get(\"/discover/movie\").then((data) => {\r\n     setMovies(data.results);\r\n     setIsLoading(false)\r\n    \r\n    });\r\n}, []);\r\nif (isLoading){\r\n    return <Spinner />\r\n}\r\n\r\n\r\n\r\n\r\n    return <ul className={styles.moviesGrid}>\r\n        {movies.map((movie) => (\r\n         <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n    </ul>;\r\n}\r\n\r\nexport default MovieGrid"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAO,CAAC,GAAGL,WAAW,CAAC,CAAC;EAEhC,OAAOP,KAAK,CAACa,OAAO,CAAC,MAAM,IAAIC,eAAe,CAACF,MAAM,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;AACnE;AAACD,EAAA,CAJMD,QAAQ;EAAA,QACMH,WAAW;AAAA;AAOlC,SAASQ,SAASA,CAAA,EAAG;EAAAC,GAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMiB,KAAK,GAAGX,QAAQ,CAAC,CAAC;EACxB,MAAME,MAAM,GAAIS,KAAK,CAAChB,GAAG,CAAC,QAAQ,CAAC;EACnCiB,OAAO,CAACC,GAAG,CAACX,MAAM,CAAC;EAEnBT,SAAS,CAAC,MAAM;IACZiB,YAAY,CAAC,IAAI,CAAC;IAClBf,GAAG,CAAC,iBAAiB,CAAC,CAACmB,IAAI,CAAEC,IAAI,IAAK;MACrCP,SAAS,CAACO,IAAI,CAACC,OAAO,CAAC;MACvBN,YAAY,CAAC,KAAK,CAAC;IAEpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,IAAID,SAAS,EAAC;IACV,oBAAOV,OAAA,CAACH,OAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB;EAKI,oBAAOrB,OAAA;IAAIsB,SAAS,EAAE7B,MAAM,CAAC8B,UAAW;IAAAC,QAAA,EACnChB,MAAM,CAACiB,GAAG,CAAEC,KAAK,iBACjB1B,OAAA,CAACR,SAAS;MAAgBkC,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACC,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AACT;AAACd,GAAA,CA5BQD,SAAS;EAAA,QAIJL,QAAQ;AAAA;AAAA2B,EAAA,GAJbtB,SAAS;AA8BlB,eAAeA,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}